---
import Footer from "@/components/Footer";
import GlassHeader from "@/components/GlassHeader";
import "../styles/global.css";
import { getCookieValue } from "@/lib/cookies";
import { getTranslatedPageTexts } from "@/lib/translations";

interface Props {
  title?: string;
  description?: string;
}

const cookieHeader = Astro.request.headers.get("Cookie") ?? "";

const requestedLocale = getCookieValue("preferredLocale",cookieHeader)

const { pageTitle, pageDescription } = getTranslatedPageTexts(requestedLocale ?? Astro.preferredLocale).titles;

const { title = pageTitle, description = pageDescription } =
  Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" sizes="32x32" href="/favicon.ico">
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body
    class="min-h-screen bg-background font-sans antialiased selection:bg-purple-500/20 selection:text-purple-500"
  >
    <div
      class="fixed inset-0 -z-10 h-full w-full bg-background bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"
    >
    </div>
    <GlassHeader client:only="react" />
      
      <main class="min-h-screen">
        <slot />
      </main>
    <Footer client:only="react" />
    <script>

      document.addEventListener('DOMContentLoaded', () => {
        const intervalId = setInterval(() => {
          const hash = window.location.hash;
          if (hash) {
            const el = document.querySelector('section' + hash);
            if (el) {
              el.scrollIntoView({ behavior: 'smooth' });
              clearInterval(intervalId);
            }
          }
        }, 500);
      });
    </script>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100%;
    scroll-behavior: smooth;
  }

  :root {
    --transition-standard: 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  body {
    transition:
      background-color var(--transition-standard),
      color var(--transition-standard);
  }
</style>
